cd *insert directory* <changes directory to a new directory>

mkdir *insert new folder name* <creates a new folder directory in the current selected directory>

touch *insert file name and file extension* <creates a new file at the current terminal directory level>

git init <initialises the git repository in the current terminal directory path>

git add *insert file name and file extension* <adds the selected file to the git staging area, preparing it for commit> ... *git add .* <adds all the files in the current directory into the staging area>

git rm --cache *insert file name and file extension* <removes a file from the staging area, making it unprepared for commit>

git status <gives an overview all files and their changes ready for commit>

git commit -m "*insert details of current version type being committed*" <commits the files in the staging area to the git repository, creating a new version, with the associated details>

git log <shows all of the current versions that are committed to the git repository>

git diff *insert file name and file extension* <shows any differences between the current committed files and the current saved files in the directory, in which a git add and commit has not been actioned>

git checkout *insert file name and file extension* <reverts the current file saved in the directory back to the latest committed version type in git>

git remote add origin *insert GitHub directory name from website* <creates a new remote (web based) repository for your git local repository>

git push -u origin master <pushes all of the data currently stored in your local git repository to the previously specified remote git repository>

touch .gitignore <creates a gitignore file in the current directory. This is used for "ignoring" particular files when committing git files in a directory> ... the gitignore file should include the file names that we want to ignore when adding and committing to git (each on a new line) ... within the gitignore file, you can use # to comment out certain lines for clarity. You can also use the * to specify ignoring bulk files (for example *.txt will ignore all .txt files)

git clone *insert URL of git repository to clone* <creates a clone of the git repository stored in the current directory>